---
- name: install routing packages
  opkg:
    name: "{{ wrt_net_packages |join(',') }}"
  tags: wrt_net_packages

- name: create service script for net routing
  copy:
    src: fixrouting.sh
    dest: /opt/usr/bin/fixrouting
    mode: 0750
    force: true
  notify: restart wrt service routing
  tags: wrt_net_routing

- name: create routing startup script
  copy:
    src: net-initd.sh
    dest: /opt/etc/init.d/{{ wrt_net_initd }}
    mode: 0755
    force: true
  notify: restart wrt service routing
  tags: wrt_net_routing

- name: create net config directory
  file:
    path: /opt/etc/net
    state: directory
  tags: wrt_net_routing

- name: update configuration
  template:
    src: "{{ item }}.j2"
    dest: "/opt/etc/net/{{ item }}"
  loop:
    - config
    - static-routes
    - dynamic-routes
    - int-hosts
    - block-hosts
  notify: restart wrt service routing
  tags: wrt_net_routing

- name: enable wrt service routing
  openwrt_init2:
    name: "{{ wrt_net_initd }}"
    state: started
  tags:
    - skip_ansible_lint
    - wrt_net_routing

- name: create netfilter hook for vpn interfaces
  template:
    src: nf-if-vpn.sh
    dest: "{{ wrt_net_nf_dir }}/all_vpn.rules"
    mode: 0755
  notify: restart wrt service routing
  tags: wrt_net_hooks

- name: amend firewall rules
  template:
    src: nf-if-rules.sh
    dest: "{{ wrt_net_nf_dir }}/{{ filename }}.rules"
    mode: 0755
  when: rules |default([])
  loop: "{{ (wrt_net_firewall |default({},true)).keys()
          | sort | product(['in', 'out', 'fwd']) | list }}"
  loop_control:
    label: "{{ item.0 }}/{{ item.1 }}"
  vars:
    device: "{{ item.0 }}"
    device_c: "{{ ' -i ' + device if direct else '' }}"

    filename: "{{ device |lower |regex_replace('[^0-9a-z]+','_') + '_' + item.1 }}"
    # rules_dir: /opt/tmp

    std_chains: {in: INPUT, out: OUTPUT, fwd: FORWARD}
    f_chain: "{{ std_chains[item.1] |upper }}"
    s_chain: "{{ f_chain if direct else '_RULES_' + filename |upper }}"
    n_chain: "{{ f_chain if direct else 'RULES_' + filename |upper }}"
    direct: "{{ props.direct |default(wrt_net_firewall_default_direct) |bool }}"
    indirect: "{{ not direct }}"

    props: "{{ wrt_net_firewall[item.0][item.1] |default({}) }}"
    rules: "{{ props.rules |default([],true) |flatten }}"
    std_rules: "{{ props.std_rules |default(false) |bool }}"
    std_lists: "{{ props.std_lists |default(false) |bool }}"
    domain: "{{ props.domain |default('inet',true) }}"
    got_ipv4: "{{ domain in ['inet', 'ipv4'] }}"
    got_ipv6: "{{ domain in ['inet', 'ipv6'] }}"
    first: "{{ props.first |default(false) |bool }}"
  notify: restart wrt service routing
  tags: wrt_net_firewall
...
